@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model X.PagedList.PagedList<RemessaFaccao.DAL.Models.Faccao>

@{
    ViewData["Title"] = "Lista de Facções";
}

<h1>Lista de Facções</h1>
<p>Total de Facções: @Model.Count()</p>
<div class="row">
    <div class="col-md-2">
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi-plus"></i>Adicionar
        </a>
    </div>
    <form asp-action="Index" method="get" class="col-md-3">
        <div class="input-group">
            <input type="text" class="form-control" name="searchString" value="@ViewBag.CurrentFilter" placeholder="Pesquisar por Nome" />
            &nbsp;
            <div class="input-group-btn">
                <button type="submit" class="btn btn-outline-secondary"><i class="bi bi-search"></i></button>
            </div>
        </div>
    </form>
</div>
<br />
<div class="col-md-8">
    <table class="table">
        <thead>
            <tr>
                <th>
                    &nbsp;&nbsp;&nbsp;&nbsp; Código
                </th>
                <th>
                    @Html.ActionLink("Nome", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter=ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink("Ativo", "Index", new { sortOrder = ViewBag.AtivoSortParm, currentFilter=ViewBag.CurrentFilter })
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        &nbsp;&nbsp;&nbsp;&nbsp; @Html.DisplayFor(modelItem => item.FaccaoId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nome)
                    </td>
                    <td>
                        @Html.CheckBoxFor(modelItem => item.Ativo, new { @disabled = "disable" })
                    </td>
                    <td>
                        <span>
                            <a href="@Url.Action("Details", new { id=item.FaccaoId })" class="btn btn-secondary">
                                <i class="bi-clipboard"></i>
                            </a>
                        </span>
                        <span>
                            <a href="@Url.Action("Edit", new { id=item.FaccaoId })" class="btn btn-warning">
                                <i class="bi-pencil"></i>
                            </a>
                        </span>
                        <span>
                            <a href="@Url.Action("Delete", new { id=item.FaccaoId })" class="btn btn-danger">
                                <i class="bi-trash"></i>
                            </a>
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<br />
<div>
    <p style="font-size:18px">
        <span>Página</span> @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) <span>de</span> @Model.PageCount
    </p>
    <p>
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }), new PagedListRenderOptions { LiElementClasses = new string[] { "page-item" },PageClasses = new string[] { "page-link" }})
    </p>
</div>

<script>
    function myFunction() {
        document.getElementById("check").disabled = true;
    }
</script>